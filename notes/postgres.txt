⚙️ How to Set It Up

Install PostgreSQL on your server (Ubuntu/Debian example):

sudo apt update
sudo apt install php7.4-pgsql
sudo apt install postgresql postgresql-contrib
sudo systemctl restart php7.4-fpm
sudo systemctl restart nginx



Create database & user:

sudo -u postgres psql
CREATE DATABASE "school-seats";
CREATE USER admin WITH PASSWORD 'e59v5O41T1bI';
GRANT ALL PRIVILEGES ON DATABASE "school-seats" TO admin;
\q


Update Laravel .env:
sudo nano /var/www/school-grid/.env

DB_CONNECTION=pgsql
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=school-seats
DB_USERNAME=laravel_user
DB_PASSWORD=strongpassword


✅ Verify Installation

Run:
php -m | grep pgsql


You should see:
pdo_pgsql
Pgsql

Clear Config:
php artisan config:cache

Test connection in Laravel:
php artisan migrate


Restart postgres
sudo systemctl restart postgresql



Visualize database with adminer

Adminer (Lightweight Alternative)
Single PHP file, works like phpMyAdmin but supports PostgreSQL.
Very lightweight, easy for Laravel projects.

Setup:
cd /var/www/html
sudo wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1.php
sudo mv adminer-4.8.1.php adminer.php

Then open in browser:
http://<your-server-ip>/adminer.php
http://13.232.201.127/adminer.php

Edit PostgreSQL’s authentication file
sudo nano /etc/postgresql/16/main/pg_hba.conf

Find lines like:
local   all             all                                     peer

Change peer → md5 (or scram-sha-256 if your Postgres supports it):
local   all             all                                     md5

Restart PostgreSQL
sudo systemctl restart postgresql


